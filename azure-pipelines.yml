trigger:
- develop

variables:
  - name: subscription
    value: METADATA-dev
  - name: clusterRg
    value: pre-md-cluster-rg
  - name: clusterName
    value: pre-md-cluster-aks

jobs:
- job: publish
  timeoutInMinutes: "30"
  # itss linux build server 
  pool: dv-alex-adobuildserves-ubuntu-vmss
  steps:
    - checkout: self
      displayName: Set up repository
      submodules: recursive # needed for submodules
    - task: AzureCLI@2
      displayName: Configure access to aks cluster
      inputs:
        azureSubscription: 'dvl-dev-infocat-ARM'
        addSpnToEnvironment: true
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          # download kubectl and kubelogin
          sudo az aks install-cli --subscription ${{ variables.subscription }} --client-version latest --kubelogin-version latest --only-show-errors
          
          # download ~/.kube/config file
          az aks get-credentials --resource-group ${{ variables.clusterRg }} --name ${{ variables.clusterName }} --only-show-errors

          # convert ~/.kube/config to a format compatible with kubelogin
          kubelogin convert-kubeconfig --login spn

          # create secure azure devops variables for later steps
          echo "##vso[task.setvariable variable=spnId;isSecret=true]$servicePrincipalId"
          echo "##vso[task.setvariable variable=spnSecret;isSecret=true]$servicePrincipalKey"
    - task: Bash@3
      displayName: Set git commit sha as env var
      inputs:
        targetType: 'inline'
        script: |
          GIT_COMMIT_SHA=$(git rev-parse HEAD)
          echo "GIT_COMMIT_SHA: ${GIT_COMMIT_SHA}"
          echo "##vso[task.setvariable variable=GIT_COMMIT_SHA]${GIT_COMMIT_SHA}"
    - task: Maven@3
      displayName: Build project artifacts
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
        options: ' -DskipTests -Pwar -Pwro4j-prebuild-cache'
    - task: Docker@2
      displayName: Build web image and push to preprod container registry (premdacr)
      inputs:
        containerRegistry: 'premdacr'
        repository: 'metadata/geonetwork'
        command: 'buildAndPush'
        Dockerfile: 'web/Dockerfile'
        tags: |
          latest
          develop
          $(GIT_COMMIT_SHA)
    - task: Bash@3
      displayName: Rolling restart of geonetwork
      env:
        AAD_SERVICE_PRINCIPAL_CLIENT_ID: $(spnId)
        AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(spnSecret)
      inputs:
        targetType: 'inline'
        script: |
          kubectl rollout restart -n dev deployment/geonetwork