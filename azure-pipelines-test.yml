trigger:
  - develop

variables:
  - name: subscription
    value: METADATA-dev
  - name: manualskip
    value: false

jobs:
  - job: skipcheck
    pool: dv-alex-adobuildserves-ubuntu-vmss
    steps:
      - bash: |
          echo "Testing whether we need to skip the pipeline."
          substring='skipci'
          echo "> substring: $substring"
          echo "> commit message: $COMMIT_MESSAGE"
          if [[ "$COMMIT_MESSAGE" == *"$substring"* ]];
          then
            echo "> '$substring' was found in the commit message."
            echo "##vso[task.setvariable variable=skip;isoutput=true]true"
          else
            echo "##vso[task.setvariable variable=skip;isoutput=true]false"
          fi
        name: skipcheck
        env:
          COMMIT_MESSAGE: $(Build.SourceVersionMessage)
  - job: B
    pool: dv-alex-adobuildserves-ubuntu-vmss
    dependsOn: skipcheck
    condition: and(succeeded(), eq(dependencies.skipcheck.outputs['skipcheck.skip'], 'false'))
    variables:
      skip: $[ dependencies.skipcheck.outputs['skipcheck.skip'] ]
    steps:
      - bash: |
          echo "var from skipcheck: $(skip)"
#  - job: skipcheck
#    timeoutInMinutes: "30"
#    pool: dv-alex-adobuildserves-ubuntu-vmss
#    steps:
#      - task: Bash@3
#        displayName: Check if we need to skip the pipeline
#        name: skipcheck
#        env:
#          COMMIT_MESSAGE: $(Build.SourceVersionMessage)
#        inputs:
#          targetType: 'inline'
#          script: |
#            echo "Testing whether we need to skip the pipeline."
#            SUB='skipci'
#            echo "> SUB: $SUB"
#            echo "> COMMIT_MESSAGE: $COMMIT_MESSAGE"
#            skip=false
#            if [[ "$COMMIT_MESSAGE" == *"$SUB"* ]]; then
#              echo "> '$SUB' was found in the commit message."
#              skip=true
#            fi
#            echo "result skip: $skip"
#            echo '##vso[task.setvariable variable=skip;isOutput=true]$skip'
#  - job: publish
#    timeoutInMinutes: "60"
#    pool: dv-alex-adobuildserves-ubuntu-vmss
#    dependsOn: skipcheck
##    condition: and(succeeded(), ne(dependencies.skipcheck.outputs['skipcheck.skip'], 'true'))
#    condition: and(succeeded(), eq(variables.manualskip, false))
#    variables:
#      myVarFromJobA: $[ dependencies.skipcheck.outputs['skipcheck.skip'] ]
#    steps:
#      - task: Bash@3
#        displayName: Should not run when skipped
#        inputs:
#          targetType: 'inline'
#          script: |
#            echo "var from skipcheck: $(myVarFromJobA)"
#            echo "Hello from the end of the world..."
